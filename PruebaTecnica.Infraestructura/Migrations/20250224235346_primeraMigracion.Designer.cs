// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PruebaTecnica.Persistencia;

#nullable disable

namespace PruebaTecnica.Persistencia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250224235346_primeraMigracion")]
    partial class primeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnica.Dominio.Entidades.CapacidadDemandadaYRAPEn2024BCAPreliminarv20250127", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CapacidadDemandadaMW")
                        .HasColumnType("double precision");

                    b.Property<string>("Participante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RequisitoAnualDePotenciaMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("SubCuentaDelParticipante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorDelRequisitoAnualDePotenciaEficienteMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("ZonaDePotencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CapacidadDemandadaYRAPEn2024BCAPreliminarv20250127");
                });

            modelBuilder.Entity("PruebaTecnica.Dominio.Entidades.CapacidadDemandadaYRAPEn2024BCAv20250131", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CapacidadDemandadaMW")
                        .HasColumnType("double precision");

                    b.Property<string>("Participante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RequisitoAnualDePotenciaMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("SubCuentaDelParticipante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorDelRequisitoAnualDePotenciaEficienteMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("ZonaDePotencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CapacidadDemandadaYRAPEn2024BCAv20250131");
                });

            modelBuilder.Entity("PruebaTecnica.Dominio.Entidades.CapacidadDemandadaYRAPEn2024BCSPreliminarv20250127", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CapacidadDemandadaMW")
                        .HasColumnType("double precision");

                    b.Property<string>("Participante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RequisitoAnualDePotenciaMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("SubCuentaDelParticipante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorDelRequisitoAnualDePotenciaEficienteMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("ZonaDePotencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CapacidadDemandadaYRAPEn2024BCSPreliminarv20250127");
                });

            modelBuilder.Entity("PruebaTecnica.Dominio.Entidades.CapacidadDemandadaYRAPEn2024BCSv20250131", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CapacidadDemandadaMW")
                        .HasColumnType("double precision");

                    b.Property<string>("Participante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RequisitoAnualDePotenciaMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("SubCuentaDelParticipante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorDelRequisitoAnualDePotenciaEficienteMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("ZonaDePotencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CapacidadDemandadaYRAPEn2024BCSv20250131");
                });

            modelBuilder.Entity("PruebaTecnica.Dominio.Entidades.CapacidadDemandadaYRAPEn2024SINPreliminarv20250127", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CapacidadDemandadaMW")
                        .HasColumnType("double precision");

                    b.Property<string>("Participante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RequisitoAnualDePotenciaMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("SubCuentaDelParticipante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorDelRequisitoAnualDePotenciaEficienteMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("ZonaDePotencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CapacidadDemandadaYRAPEn2024SINPreliminarv20250127");
                });

            modelBuilder.Entity("PruebaTecnica.Dominio.Entidades.CapacidadDemandadaYRAPEn2024SINv20250131", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CapacidadDemandadaMW")
                        .HasColumnType("double precision");

                    b.Property<string>("Participante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RequisitoAnualDePotenciaMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("SubCuentaDelParticipante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ValorDelRequisitoAnualDePotenciaEficienteMWAnio")
                        .HasColumnType("double precision");

                    b.Property<string>("ZonaDePotencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CapacidadDemandadaYRAPEn2024SINv20250131");
                });
#pragma warning restore 612, 618
        }
    }
}
